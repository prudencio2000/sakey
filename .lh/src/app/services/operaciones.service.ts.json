{
    "sourceFile": "src/app/services/operaciones.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1699432546941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1699432560274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n       })\r\n     })\r\n   }\r\n   async deleteKey (id:string):Promise<any>{\r\n-    this.ipcService.send('delete-key')\r\n+    this.ipcService.send('delete-key',id)\r\n     return new Promise ((resolve)=>{\r\n       this.ipcService.on('delete-key-respuesta',(event:any, arg:any)=>{\r\n         resolve(arg)\r\n       })\r\n"
                },
                {
                    "date": 1699436002998,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,10 @@\n     })\r\n   }\r\n \r\n   async registrarKey (datos:any):Promise<any>{\r\n+    console.log(\"datos\");\r\n+    \r\n     this.ipcService.send('registrar-key',datos)\r\n     return new Promise ((resolve)=>{\r\n       this.ipcService.on('registrar-key-save',(event:any, arg:any)=>{\r\n         resolve(arg)\r\n"
                },
                {
                    "date": 1699436060658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,10 +50,8 @@\n     })\r\n   }\r\n \r\n   async registrarKey (datos:any):Promise<any>{\r\n-    console.log(\"datos\");\r\n-    \r\n     this.ipcService.send('registrar-key',datos)\r\n     return new Promise ((resolve)=>{\r\n       this.ipcService.on('registrar-key-save',(event:any, arg:any)=>{\r\n         resolve(arg)\r\n"
                }
            ],
            "date": 1699432546941,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\r\nimport { IpcService } from './ipc.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OperacionesService {\r\n\r\n  constructor(private ipcService: IpcService) { }\r\n\r\n  async registrarLogin(datos: any): Promise<any> {\r\n    this.ipcService.send('registrar-login', datos);\r\n    return new Promise((resolve: any) => {\r\n      this.ipcService.on('registrar-login-respuesta', (event: any, data: any) => {\r\n        resolve(data);\r\n      })\r\n    })\r\n  }\r\n\r\n  async registrarQuestion (datos:any) : Promise <any> {\r\n    this.ipcService.send('registrar-respuesta',datos);\r\n    return new Promise((resolve: any) => {\r\n      this.ipcService.on('registrar-respuesta-respuesta', (event: any, data: any) => {\r\n        resolve(data);\r\n      })\r\n    })\r\n  }\r\n  async lsLogin(): Promise<any> {\r\n    this.ipcService.send('ls-login', {});\r\n    return new Promise((resolve: any) => {\r\n      this.ipcService.on('ls-login-respuesta', (event: any, data: any) => {\r\n        resolve(data);\r\n      })\r\n    })\r\n  }\r\n  async lsQuestion ():Promise<any> {\r\n    this.ipcService.send('ls-questions', {});\r\n    return new Promise ((resolve:any)=>{\r\n      this.ipcService.on('ls-questions-respuesta', (event: any, arg: any) => {\r\n        resolve(arg)\r\n      })\r\n    })\r\n  }\r\n  async entrar (password:string):Promise<any> {\r\n    this.ipcService.send('entrar', password);\r\n    return new Promise ((resolve:any)=>{\r\n      this.ipcService.on('entrar-respuesta', (event: any, arg: any) => {\r\n        resolve(arg)\r\n      })\r\n    })\r\n  }\r\n\r\n  async registrarKey (datos:any):Promise<any>{\r\n    this.ipcService.send('registrar-key',datos)\r\n    return new Promise ((resolve)=>{\r\n      this.ipcService.on('registrar-key-save',(event:any, arg:any)=>{\r\n        resolve(arg)\r\n      })\r\n    })\r\n  }\r\n\r\n  async lsKey ():Promise<any>{\r\n    this.ipcService.send('ls-key')\r\n    return new Promise ((resolve)=>{\r\n      this.ipcService.on('savekey-respuesta',(event:any, arg:any)=>{\r\n        resolve(arg)\r\n      })\r\n    })\r\n  }\r\n  async deleteKey (id:string):Promise<any>{\r\n    this.ipcService.send('delete-key')\r\n    return new Promise ((resolve)=>{\r\n      this.ipcService.on('delete-key-respuesta',(event:any, arg:any)=>{\r\n        resolve(arg)\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n"
        }
    ]
}