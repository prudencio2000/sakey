{
    "sourceFile": "src/app/olvide/olvide.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1699527064295,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1699527925059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+import { Component, OnInit } from '@angular/core';\r\n+import { OperacionesService } from '../services/operaciones.service';\r\n+import { FormControl, FormGroup, Validators } from '@angular/forms';\r\n+\r\n+@Component({\r\n+  selector: 'app-olvide',\r\n+  templateUrl: './olvide.component.html',\r\n+  styleUrls: ['./olvide.component.scss']\r\n+})\r\n+export class OlvideComponent implements OnInit {\r\n+\r\n+  ver: boolean = false;\r\n+  tipo: string = \"password\";\r\n+  ver1: boolean = false;\r\n+  tipo1: string = \"password\";\r\n+  titulos: string[] = [];\r\n+  formulario: FormGroup = new FormGroup({\r\n+    password: new FormControl('', [Validators.required]),\r\n+    repetPassword: new FormControl('', [Validators.required]),\r\n+  })\r\n+  constructor(private operaciones: OperacionesService) {\r\n+\r\n+  }\r\n+  async ngOnInit() {\r\n+    let datos: any = await this.operaciones.questionValidacion();\r\n+    datos = datos.data;\r\n+    this.titulos = datos.map((dato: any) => dato.titulo);\r\n+    let contador = 1;\r\n+    datos.forEach((data: any) => {\r\n+      this.formulario.addControl(`question_${contador}`, new FormControl('', [Validators.required]))\r\n+      contador++;\r\n+    });\r\n+    console.log(this.formulario);\r\n+    \r\n+  }\r\n+  verPassword() {\r\n+    this.ver = !this.ver;\r\n+    if (!this.ver) this.tipo = \"password\"\r\n+    else this.tipo = \"text\"\r\n+  }\r\n+  verPassword1() {\r\n+    this.ver1 = !this.ver1;\r\n+    if (!this.ver1) this.tipo1 = \"password\"\r\n+    else this.tipo1 = \"text\"\r\n+  }\r\n+  cambiarPassword(){\r\n+    console.log(this.formulario.value);\r\n+    \r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1699529236668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,54 +43,8 @@\n     if (!this.ver1) this.tipo1 = \"password\"\r\n     else this.tipo1 = \"text\"\r\n   }\r\n   cambiarPassword(){\r\n-    console.log(this.formulario.value);\r\n+    console.log(this.formulario.valid);\r\n     \r\n   }\r\n }\r\n-import { Component, OnInit } from '@angular/core';\r\n-import { OperacionesService } from '../services/operaciones.service';\r\n-import { FormControl, FormGroup, Validators } from '@angular/forms';\r\n-\r\n-@Component({\r\n-  selector: 'app-olvide',\r\n-  templateUrl: './olvide.component.html',\r\n-  styleUrls: ['./olvide.component.scss']\r\n-})\r\n-export class OlvideComponent implements OnInit {\r\n-\r\n-  ver: boolean = false;\r\n-  tipo: string = \"password\";\r\n-  ver1: boolean = false;\r\n-  tipo1: string = \"password\";\r\n-  titulos: string[] = [];\r\n-  formulario: FormGroup = new FormGroup({\r\n-    password: new FormControl('', [Validators.required]),\r\n-    repetPassword: new FormControl('', [Validators.required]),\r\n-  })\r\n-  constructor(private operaciones: OperacionesService) {\r\n-\r\n-  }\r\n-  async ngOnInit() {\r\n-    let datos: any = await this.operaciones.questionValidacion();\r\n-    datos = datos.data;\r\n-    this.titulos = datos.map((dato: any) => dato.titulo);\r\n-    let contador = 1;\r\n-    datos.forEach((data: any) => {\r\n-      this.formulario.addControl(`question_${contador}`, new FormControl('', [Validators.required]))\r\n-      contador++;\r\n-    });\r\n-    console.log(this.formulario);\r\n-    \r\n-  }\r\n-  verPassword() {\r\n-    this.ver = !this.ver;\r\n-    if (!this.ver) this.tipo = \"password\"\r\n-    else this.tipo = \"text\"\r\n-  }\r\n-  verPassword1() {\r\n-    this.ver1 = !this.ver1;\r\n-    if (!this.ver1) this.tipo1 = \"password\"\r\n-    else this.tipo1 = \"text\"\r\n-  }\r\n-}\r\n"
                }
            ],
            "date": 1699527064295,
            "name": "Commit-0",
            "content": "import { Component, OnInit } from '@angular/core';\r\nimport { OperacionesService } from '../services/operaciones.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-olvide',\r\n  templateUrl: './olvide.component.html',\r\n  styleUrls: ['./olvide.component.scss']\r\n})\r\nexport class OlvideComponent implements OnInit {\r\n\r\n  ver: boolean = false;\r\n  tipo: string = \"password\";\r\n  ver1: boolean = false;\r\n  tipo1: string = \"password\";\r\n  titulos: string[] = [];\r\n  formulario: FormGroup = new FormGroup({\r\n    password: new FormControl('', [Validators.required]),\r\n    repetPassword: new FormControl('', [Validators.required]),\r\n  })\r\n  constructor(private operaciones: OperacionesService) {\r\n\r\n  }\r\n  async ngOnInit() {\r\n    let datos: any = await this.operaciones.questionValidacion();\r\n    datos = datos.data;\r\n    this.titulos = datos.map((dato: any) => dato.titulo);\r\n    let contador = 1;\r\n    datos.forEach((data: any) => {\r\n      this.formulario.addControl(`question_${contador}`, new FormControl('', [Validators.required]))\r\n      contador++;\r\n    });\r\n    console.log(this.formulario);\r\n    \r\n  }\r\n  verPassword() {\r\n    this.ver = !this.ver;\r\n    if (!this.ver) this.tipo = \"password\"\r\n    else this.tipo = \"text\"\r\n  }\r\n  verPassword1() {\r\n    this.ver1 = !this.ver1;\r\n    if (!this.ver1) this.tipo1 = \"password\"\r\n    else this.tipo1 = \"text\"\r\n  }\r\n}\r\n"
        }
    ]
}